{"version":3,"sources":["components/admin/Dashboard.js","components/auth/Register.js","logo.svg","components/config.js","components/auth/Login.js","components/buyer/Dashboard.js","components/admin/Products.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","firestore","Dashboard","props","toggle","setState","isOpen","handleChange","e","target","id","value","toggleModal","isAddProduct","state","showDisabled","addProduct","logOut","isLogout","showProducts","isProducts","isUserPage","approveProd","i","console","log","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","collection","doc","set","status","name","proData","modelName","color","engine","maxPower","mileage","fuelCapacity","currentBid","isActive","disableProd","disableUser","index","handleSubmit","preventDefault","Math","random","toString","substring","data","getData","buyerDashboard","userData","bind","showUsers","localStorage","getItem","this","a","get","querySnapshot","tempDoc","docs","map","clear","to","pathname","dark","expand","href","onClick","navbar","className","active","style","cursor","type","hover","userId","disabled","firstName","email","Role","size","onSubmit","controlId","autoFocus","placeholder","onChange","React","Component","Signup","password","lastName","user","auth","createUserWithEmailAndPassword","uid","UID","catch","error","alert","message","signOut","signIn1","getDetails","onAuthStateChanged","htmlFor","block","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","settings","Login","goToRegister","isRegister","event","pass","signInWithEmailAndPassword","addData","setItem","redirect","Form","FormGroup","Label","Input","Button","BDashboard","addBid","input","inputLabel","inputValue","inputValidator","Navbar","NavbarBrand","NavbarToggler","Collapse","Nav","NavItem","NavLink","NavbarText","Table","Products","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4971e2f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Table,Modal, ModalHeader, ModalBody, ModalFooter\r\n} from 'reactstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport firebase from 'firebase/app'\r\nimport Swal from 'sweetalert2'\r\nimport { Button,Form, Input,FormGroup,Label } from 'reactstrap';\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isOpen: false,\r\n          isLogout : false,\r\n          isProducts : true,\r\n          isAddProduct : false,\r\n          isUserPage : false,\r\n          buyerDashboard : false,\r\n          proData : [],\r\n          userData : []\r\n        }\r\n        this.getData = this.getData.bind(this)\r\n        this.showUsers = this.showUsers.bind(this)\r\n    }  \r\n    toggle = () => {\r\n        this.setState({isOpen : true})\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({isAddProduct : !this.state.isAddProduct})\r\n    }\r\n    componentDidMount() {\r\n        console.log(localStorage.getItem('userId'))\r\n        console.log(localStorage.getItem('role'))\r\n        console.log(localStorage.getItem('email'))\r\n        if(!localStorage.getItem('userId')) {\r\n            this.setState({isLogout : true})\r\n        }\r\n        else {\r\n            if(localStorage.getItem('role') !== '1'){\r\n                this.setState({buyerDashboard : true})\r\n            }\r\n            this.getData()\r\n        }\r\n        \r\n    }\r\n    showDisabled = () => {\r\n        this.setState({showDisabled : !this.state.showDisabled})\r\n    }\r\n    async getData() {\r\n        const events = await db.collection('products')\r\n        events.get().then((querySnapshot) => {\r\n            const tempDoc = querySnapshot.docs.map((doc) => {\r\n                \r\n                    return { id: doc.id, ...doc.data() }\r\n                \r\n                \r\n            })\r\n            console.log(tempDoc)\r\n            this.setState({proData : tempDoc })\r\n            })\r\n\r\n    }\r\n    addProduct = () => {\r\n        this.setState({isAddProduct : !this.state.isAddProduct})\r\n    }\r\n    logOut = () => {\r\n        this.setState({isLogout : true})\r\n    }\r\n    showProducts = () => {\r\n        this.setState({\r\n            isProducts : !this.state.isProducts,\r\n            isUserPage : !this.state.isUserPage            \r\n        })\r\n    }\r\n    approveProd = (id,i) => {\r\n        console.log(i)\r\n        Swal.fire({\r\n            title: 'Are you sure You want to approve this?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Approve it!'\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                db.collection(\"products\").doc(id).set({\r\n                    status : 'approved',\r\n                    id : id,\r\n                    name : this.state.proData[i].name ? this.state.proData[i].name : '',\r\n                    modelName : this.state.proData[i].modelName ? this.state.proData[i].modelName : '',\r\n                    color : this.state.proData[i].color ? this.state.proData[i].color : '',\r\n                    engine : this.state.proData[i].engine ? this.state.proData[i].engine : '',\r\n                    maxPower : this.state.proData[i].maxPower ? this.state.proData[i].maxPower : '',\r\n                    mileage : this.state.proData[i].mileage ? this.state.proData[i].mileage : '',\r\n                    fuelCapacity : this.state.proData[i].fuelCapacity ? this.state.proData[i].fuelCapacity : '',\r\n                    currentBid : this.state.proData[i].currentBid ? this.state.proData[i].currentBid : '',\r\n                    isActive : this.state.proData[i].isActive ? this.state.proData[i].isActive : 0,\r\n                }).then(doc => {\r\n                    Swal.fire({\r\n                        icon : 'success',\r\n                        title : 'Updated Successfully!'\r\n                    })\r\n                })\r\n            }\r\n        })\r\n          \r\n    }\r\n    disableProd = (id,i) => {\r\n        Swal.fire({\r\n            title: 'Are you sure You want to Delete this?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Delete it!'\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                db.collection(\"products\").doc(id).set({\r\n                    isActive : 0,\r\n                    id : id,\r\n                    name : this.state.proData[i].name ? this.state.proData[i].name : '',\r\n                    modelName : this.state.proData[i].modelName ? this.state.proData[i].modelName : '',\r\n                    color : this.state.proData[i].color ? this.state.proData[i].color : '',\r\n                    engine : this.state.proData[i].engine ? this.state.proData[i].engine : '',\r\n                    maxPower : this.state.proData[i].maxPower ? this.state.proData[i].maxPower : '',\r\n                    mileage : this.state.proData[i].mileage ? this.state.proData[i].mileage : '',\r\n                    fuelCapacity : this.state.proData[i].fuelCapacity ? this.state.proData[i].fuelCapacity : '',\r\n                    currentBid : this.state.proData[i].currentBid ? this.state.proData[i].currentBid : '',\r\n                    status : this.state.proData[i].status ? this.state.proData[i].status : '' \r\n                }).then(doc => {\r\n                    Swal.fire({\r\n                        icon : 'success',\r\n                        title : 'Updated Successfully!'\r\n                    })\r\n                })\r\n            }\r\n        })\r\n          \r\n    }\r\n    disableUser = (id,index) => {\r\n        Swal.fire({\r\n            title: 'Are you sure You want to Delete this?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Delete it!'\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n            }\r\n            \r\n        \r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        let id = Math.random().toString(36).substring(7);\r\n        var data = {\r\n            id : id,\r\n            name : this.state.name,\r\n            modelName : this.state.modelName,\r\n            color : this.state.color,\r\n            engine : this.state.engine,\r\n            maxPower : this.state.maxPower,\r\n            mileage : this.state.mileage,\r\n            fuelCapacity : this.state.fuelCapacity,\r\n            currentBid : this.state.currentBid,\r\n        }\r\n        console.log(data)\r\n        db.collection(\"products\").doc(id).set({\r\n            name : this.state.name ? this.state.name : '',\r\n            modelName : this.state.modelName ? this.state.modelName : '',\r\n            color : this.state.color ? this.state.color : '',\r\n            engine : this.state.engine ? this.state.engine : '',\r\n            maxPower : this.state.maxPower ? this.state.maxPower : '',\r\n            mileage : this.state.mileage ? this.state.mileage : '',\r\n            fuelCapacity : this.state.fuelCapacity ? this.state.fuelCapacity : '',\r\n            currentBid : this.state.currentBid ? this.state.currentBid : '',\r\n        }).then(doc => {\r\n            this.addProduct();\r\n            this.getData();\r\n            Swal.fire({\r\n                icon : 'success',\r\n                title : \"Stored SuccessFully!\"\r\n            });\r\n        })\r\n        console.log(data)\r\n    }\r\n\r\n    async showUsers() {\r\n        this.setState({isUserPage : !this.state.isUserPage,\r\n                        isProducts : !this.state.isProducts})\r\n        const events = await db.collection('user')\r\n        events.get().then((querySnapshot) => {\r\n            const tempDoc = querySnapshot.docs.map((doc) => {\r\n                return { id: doc.id, ...doc.data() }\r\n            })\r\n            console.log(tempDoc)\r\n            this.setState({userData : tempDoc })\r\n            })\r\n\r\n    }\r\n    render() {\r\n        if (this.state.isLogout) {\r\n            localStorage.clear()\r\n            return <Redirect to={{\r\n              pathname: \"/\",\r\n              \r\n            }}/>\r\n        }  \r\n        if(this.state.buyerDashboard) {\r\n            return <Redirect to={{\r\n                pathname: \"/buy\",\r\n                \r\n              }}/>\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"md\">\r\n                    <NavbarBrand href=\"/home\">Bidding System</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                        <NavLink active = {this.state.isProducts} style = {{cursor : 'pointer'}} onClick = {this.showProducts}>Products</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink active = {this.state.isUserPage} style = {{cursor : 'pointer'}} onClick = {this.showUsers}>Users</NavLink>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                    <NavbarText style = {{cursor: 'pointer'}} onClick = {this.logOut}>Logout</NavbarText>\r\n                    </Collapse>\r\n                </Navbar>\r\n                {this.state.isProducts ?\r\n                <div>\r\n                    <Button className = \"\" type = \"button\" color = \"primary\" onClick = {this.addProduct}> Add Product</Button>\r\n                    <Table hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n\r\n                            <th>Product Name</th>\r\n                            <th>color</th>\r\n                            <th>Model Name</th>\r\n                            <th> Engine</th>\r\n                            <th>Max Power</th>\r\n                            <th> Mileage</th>\r\n                            <th> Fuel Capacity</th>\r\n                            <th> Current Bid</th>\r\n                            <th> Current Bidding User</th>\r\n                            <th> Approve</th>\r\n                            <th> Delete</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.proData.map((i,index) => {\r\n                                \r\n                                return(\r\n                                    \r\n                                    i.isActive !== 0 ?\r\n                                    <tr>\r\n                                        <td>{i.id}</td>\r\n                                        <td>{i.name}</td>\r\n                                        <td>{i.color}</td>\r\n                                        <td>{i.modelName}</td>\r\n                                        <td>{i.engine}</td>\r\n                                        <td> {i.maxPower}</td>\r\n                                        <td> {i.mileage}</td>\r\n                                        <td>{i.fuelCapacity}</td>\r\n                                        <td>{i.currentBid}</td>\r\n                                        <td>{i.userId ? i.userId : 'No Users'}</td>\r\n                                        <td>\r\n                                            <Button disabled = {i.userId ? false : true} onClick = {(e) => this.approveProd(i.id,index) } color = \"primary\">{i.status == 'approved' ? 'Approved' : i.userId ? 'Approve' : 'Waiting for Users' }</Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button onClick = {(e) => this.disableProd(i.id, index)} color = \"danger\">Delete</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                    :\r\n                                    this.state.showDisabled ?\r\n                                    <tr>\r\n                                        <td>{i.id}</td>\r\n                                        <td>{i.name}</td>\r\n                                        <td>{i.color}</td>\r\n                                        <td>{i.modelName}</td>\r\n                                        <td>{i.engine}</td>\r\n                                        <td> {i.maxPower}</td>\r\n                                        <td> {i.mileage}</td>\r\n                                        <td>{i.fuelCapacity}</td>\r\n                                        <td>{i.currentBid}</td>\r\n                                        <td>{i.userId ? i.userId : 'No Users'}</td>\r\n                                        <td>\r\n                                            <Button onClick = {(e) => this.approveProd(i.id,index) } color = \"primary\">{i.status == 'approved' ? 'Approved' : 'Approve' }</Button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button onClick = {(e) => this.disableProd(i.id, index)} color = \"danger\">Delete</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                    :\r\n                                    ''\r\n                                )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button onClick = {this.showDisabled}>{this.state.showDisabled ? 'Hide' : 'Show'} Disabled Products</Button>\r\n                </div>\r\n                    \r\n                  :\r\n                  this.state.isUserPage ?\r\n                    <Table hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n\r\n                            <th>First Name</th>\r\n                            <th>Email ID</th>\r\n                            <th>Role</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.userData.map((i,index) => {\r\n                                \r\n                                return(\r\n                                    <tr>\r\n                                        <td>{i.id}</td>\r\n                                        <td>{i.firstName}</td>\r\n                                        <td>{i.email}</td>\r\n                                        <td>{i.Role == 2 ? 'Buyer' : 'Admin'}</td>\r\n                                        <td>\r\n                                            <Button onClick = {(e) => this.disableUser(i.id, index)} color = \"danger\">Delete</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                : ''\r\n                }\r\n                <Modal size = \"lg\" isOpen={this.state.isAddProduct} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Modal title</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup size=\"lg\" controlId=\"email\">\r\n                            <Label>Product Name : </Label>\r\n                                <Input\r\n                                    autoFocus\r\n                                    type=\"text\"\r\n                                    id = \"name\"\r\n                                    placeholder=\"Product Name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup size=\"lg\">\r\n                                <Label>Model Name</Label><br/>\r\n                                <Input\r\n                                placeholder = \"Model Name\"\r\n                                    type=\"text\"\r\n                                    id = \"modelName\"\r\n                                    value={this.state.modelName}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup size=\"lg\" controlId=\"engine\">\r\n                                <Label>Engine</Label><br/>\r\n                                <Input\r\n                                placeholder = \"Engine\"\r\n                                    type=\"text\"\r\n                                    id = \"Engine\"\r\n                                    value={this.state.engine}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup size=\"lg\">\r\n                                <Label>Color</Label><br/>\r\n                                <Input\r\n                                placeholder = \"Color\"\r\n                                    type=\"text\"\r\n                                    id = \"color\"\r\n                                    value={this.state.color}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup size=\"lg\">\r\n                                <Label>Fuel Capacity</Label><br/>\r\n                                <Input\r\n                                placeholder = \"Fuel Capacity\"\r\n                                    type=\"text\"\r\n                                    id = \"fuelCapacity\"\r\n                                    value={this.state.fuelCapacity}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup size=\"lg\">\r\n                                <Label>Max Power</Label><br/>\r\n                                <Input\r\n                                placeholder = \"Max Power\"\r\n                                    type=\"text\"\r\n                                    id = \"maxPower\"\r\n                                    value={this.state.maxPower}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup size=\"lg\">\r\n                                <Label>Mileage</Label><br/>\r\n                                <Input\r\n                                placeholder = \"Mileage\"\r\n                                    type=\"text\"\r\n                                    id = \"mileage\"\r\n                                    value={this.state.mileage}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup size=\"lg\">\r\n                                <Label>Starting Bid (In Rupees)</Label><br/>\r\n                                <Input\r\n                                placeholder = \"Starting Bid\"\r\n                                    type=\"text\"\r\n                                    id = \"currentBid\"\r\n                                    value={this.state.currentBid}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup size=\"lg\">\r\n                                <Button type = \"submit\" color = \"primary\">Save </Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    \r\n                    <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\r\nimport { Button,Form, Input,FormGroup,Label } from 'reactstrap';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nimport firebase from 'firebase/app'\r\nimport Swal from 'sweetalert2'\r\nimport \"./Login.css\";\r\n//firebase.initializeApp(firebaseConfig)\r\nconst db = firebase.firestore();\r\nexport default class Signup extends React.Component {\r\n    state = {\r\n        email :'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:'',\r\n        user:null,\r\n    }      \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((user) => {\r\n            \r\n            db.collection(\"user\").doc(user.user.uid).set({\r\n                email: this.state.email,\r\n                Role: 2,\r\n                status: 1,\r\n                UID: user.user.uid,\r\n            }).then(doc => {\r\n                Swal.fire(\"Register Success!\")\r\n                //const history = useHistory();\r\n                //history.push('/dashboard');\r\n            })\r\n            \r\n\r\n        }).catch(function(error) {\r\n            alert('Error :'+error.message);\r\n           })\r\n    }\r\n    logOut = (e) => {\r\n        e.preventDefault()\r\n        firebase.auth().signOut()\r\n    }\r\n    signIn1 = () => {\r\n        //window.location.href ='/signin'\r\n    }\r\n    getDetails = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            user\r\n              ? this.setState({ user })\r\n              : this.setState({ user: null });\r\n          });   \r\n    }\r\n    componentDidMount() {\r\n        this.getDetails()\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n            \r\n            {\r\n                this.state.user != null ?\r\n                <div> \r\n                <h4>User already logged in </h4>\r\n                <p>{this.state.user.email}</p>\r\n                <Button className=\"btn dark ilghten-4 z-depth-0\" onClick={this.logOut}>Signout </Button>\r\n                </div>\r\n                :\r\n            <div className=\"Login\">\r\n                <h2> Signup</h2>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <div className=\"Input-field\">\r\n                        <Label htmlFor=\"FirstName\"> First Name</Label>\r\n                        <Input type = \"text\" id=\"firstName\" onChange={this.handleChange}></Input>\r\n                    </div>\r\n                    <div className=\"Input-field\">\r\n                        <Label htmlFor=\"lastName\"> Last Name</Label>\r\n                        <Input type = \"text\" id=\"lastName\" onChange={this.handleChange}></Input>\r\n                    </div>\r\n                    <div className=\"Input-field\">\r\n                        <Label htmlFor=\"email\"> Email</Label>\r\n                        <Input type = \"text\" id=\"email\" onChange={this.handleChange}></Input>\r\n                    </div>\r\n                    <div className=\"Input-field\">\r\n                        <Label htmlFor=\"password\"> Password</Label>\r\n                        <Input type=\"text\" id =\"password\" onChange={this.handleChange}></Input>\r\n                    </div>\r\n                    <div className=\"Input-field\">\r\n                        {/* <Button  className =\"btn pink lighten-2 z-depth-0\">Signup</Button> <p></p> */}\r\n                        <Button type=\"submit\" color = \"info\"  className=\"btn blue lighten-2 z-depth-0\">Sign Up </Button>\r\n                    </div>\r\n                    <div>\r\n                    <Link to=\"/\">\r\n                        <Button block size = \"lg\" type = \"button\" color = \"primary\">\r\n                            Already user ? Sign In \r\n                            </Button>\r\n                    </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDg4O6zqifF6bmpFYFxkY9mm7_KHOeVT70\",\r\n    authDomain: \"bidding-system-becf9.firebaseapp.com\",\r\n    projectId: \"bidding-system-becf9\",\r\n    storageBucket: \"bidding-system-becf9.appspot.com\",\r\n    messagingSenderId: \"1075990024151\",\r\n    appId: \"1:1075990024151:web:f50ba6e9a45b337c928592\",\r\n    measurementId: \"G-19135MJSGY\"\r\n  };\r\nexport default firebaseConfig","import React, { useState } from \"react\";\r\nimport { Button,Form, Input,FormGroup,Label } from 'reactstrap';\r\nimport firebaseConfig from '../config';\r\nimport firebase from 'firebase/app'\r\nimport Swal from 'sweetalert2'\r\n//import Signup from './Register';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport \"./Login.css\";\r\nfirebase.initializeApp(firebaseConfig)\r\nconst Register = React.lazy(() => import('./Register'));\r\nconst Home = React.lazy(() => import('../admin/Dashboard'))\r\nconst db = firebase.firestore();\r\ndb.settings({\r\n\r\n\r\n});\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        email: '',\r\n        password : '',\r\n        isRegister : false,\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this)\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.goToRegister = this.goToRegister.bind(this)\r\n  }\r\n  goToRegister = () => {\r\n    this.setState({isRegister : true})\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id] : e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    var email = this.state.email;\r\n    var pass = this.state.password;\r\n    firebase.auth().signInWithEmailAndPassword(email, pass)\r\n    .then((user) => {\r\n      db.collection(\"user\").doc(user.user.uid).get().then(doc => {\r\n          var addData = doc.data();\r\n          localStorage.setItem('userId' , user.user.uid)\r\n          localStorage.setItem('role',addData.Role)\r\n          localStorage.setItem('email', this.state.email)\r\n          this.setState({userData : addData})\r\n          this.setState({redirect : true})\r\n      });\r\n      \r\n    })\r\n    .catch((error) => {\r\n      this.setState({ error: error });\r\n      Swal.fire(error.message)\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={{\r\n        pathname: \"/dashboard\",\r\n        \r\n      }}/>\r\n    }  \r\n    return (\r\n        <div style={{\"backgroundImage\": './bg.jpg'}} className=\"Login\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup size=\"lg\" controlId=\"email\">\r\n              <Label>Email</Label><br/>\r\n              <Input\r\n                autoFocus\r\n                type=\"email\"\r\n                id = \"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup size=\"lg\" controlId=\"password\">\r\n              <Label>Password</Label><br/>\r\n              <Input\r\n              placeholder = \"Password\"\r\n                type=\"password\"\r\n                id = \"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            <Button block size=\"lg\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Form>\r\n          <Form>\r\n          <Link to=\"/register\">\r\n          <Button block size = \"lg\" type = \"button\" color = \"primary\">\r\n              New User ? Sign Up \r\n            </Button>\r\n          </Link>\r\n            \r\n          </Form>\r\n          {this.state.isRegister ?\r\n            <div/>\r\n            :\r\n            ''\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n//const firebaseAppAuth = firebaseApp.auth();\r\n\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Table,Modal, ModalHeader, ModalBody, ModalFooter\r\n} from 'reactstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport firebase from 'firebase/app'\r\nimport Swal from 'sweetalert2'\r\nimport { Button,Form, Input,FormGroup,Label } from 'reactstrap';\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\nexport default class BDashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isProducts : true,\r\n            isOpen: false,\r\n            proData : []\r\n        }\r\n        this.getData = this.getData.bind(this)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        console.log(localStorage.getItem('userId'))\r\n        console.log(localStorage.getItem('role'))\r\n        console.log(localStorage.getItem('email'))\r\n        if(!localStorage.getItem('userId')) {\r\n            this.setState({isLogout : true})\r\n        }\r\n        else {\r\n            if(localStorage.getItem('role') !== 2){\r\n                this.setState({buyerDashboard : true})\r\n            }\r\n            this.getData()\r\n        }\r\n        \r\n    }  \r\n    toggle = () => {\r\n        this.setState({isOpen : true})\r\n    }\r\n    showProducts = () => {\r\n        this.setState({isProducts : true})\r\n    }\r\n    logOut = () => {\r\n        this.setState({isLogout : true})\r\n    }\r\n    async getData() {\r\n        const events = await db.collection('products')\r\n        events.get().then((querySnapshot) => {\r\n            const tempDoc = querySnapshot.docs.map((doc) => {\r\n                return { id: doc.id, ...doc.data() }\r\n            })\r\n            this.setState({proData : tempDoc })\r\n        })\r\n    }\r\n    addBid = (id, i) => {\r\n        var currentBid = this.state.proData[i].currentBid ? this.state.proData[i].currentBid : 0; \r\n        Swal.fire({\r\n            title: 'Enter your Bid Amount',\r\n            input: 'text',\r\n            inputLabel: 'Bid Amount',\r\n            inputValue: this.state.proData[i].currentBid ? this.state.proData[i].currentBid : 0,\r\n            showCancelButton: true,\r\n            inputValidator: (value) => {\r\n              if (!value) {\r\n                return 'You need to write something!'\r\n              }\r\n              else if(value <= currentBid) {\r\n                  return 'Amount should be greater than current Bid amount'\r\n              }\r\n              else {\r\n                db.collection(\"products\").doc(id).set({\r\n                    status : 'approved',\r\n                    id : id,\r\n                    name : this.state.proData[i].name ? this.state.proData[i].name : '',\r\n                    modelName : this.state.proData[i].modelName ? this.state.proData[i].modelName : '',\r\n                    color : this.state.proData[i].color ? this.state.proData[i].color : '',\r\n                    engine : this.state.proData[i].engine ? this.state.proData[i].engine : '',\r\n                    maxPower : this.state.proData[i].maxPower ? this.state.proData[i].maxPower : '',\r\n                    mileage : this.state.proData[i].mileage ? this.state.proData[i].mileage : '',\r\n                    fuelCapacity : this.state.proData[i].fuelCapacity ? this.state.proData[i].fuelCapacity : '',\r\n                    currentBid : value,\r\n                    isActive : this.state.proData[i].isActive ? this.state.proData[i].isActive : '',\r\n                    userId : localStorage.getItem('userId')\r\n                }).then(doc => {\r\n                    this.getData();\r\n                    Swal.fire({\r\n                        icon : 'success',\r\n                        title : 'Bidding amount added Successfully!',\r\n                        text: 'We will let you know soon .'\r\n                    })\r\n                    \r\n                })\r\n              }\r\n            }\r\n          })\r\n    }\r\n    render() {\r\n        if (this.state.isLogout) {\r\n            localStorage.clear()\r\n            return <Redirect to={{\r\n              pathname: \"/\",\r\n              \r\n            }}/>\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"md\">\r\n                    <NavbarBrand href=\"/home\">Bidding System</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                        <NavLink style = {{cursor : 'pointer'}} onClick = {this.showProducts}>Available Products</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                        <NavLink style = {{cursor : 'pointer'}} onClick = {this.showUsers}>Bucket List</NavLink>\r\n                        </NavItem>\r\n                        \r\n                    </Nav>\r\n                    <NavbarText style = {{cursor: 'pointer'}} onClick = {this.logOut}>Logout</NavbarText>\r\n                    </Collapse>\r\n                </Navbar>\r\n\r\n                {this.state.isProducts ?\r\n                    <div>\r\n                        <Table hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>id</th>\r\n\r\n                                <th>Product Name</th>\r\n                                <th>color</th>\r\n                                <th>Model Name</th>\r\n                                <th> Engine</th>\r\n                                <th>Max Power</th>\r\n                                <th> Mileage</th>\r\n                                <th> Fuel Capacity</th>\r\n                                <th> Current Bid</th>\r\n                                <th> Approve</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.proData.map((i,index) => {\r\n                                    \r\n                                    return(\r\n                                        \r\n                                        i.isActive !== 0 ?\r\n                                        <tr>\r\n                                            <td>{i.id}</td>\r\n                                            <td>{i.name}</td>\r\n                                            <td>{i.color}</td>\r\n                                            <td>{i.modelName}</td>\r\n                                            <td>{i.engine}</td>\r\n                                            <td> {i.maxPower}</td>\r\n                                            <td> {i.mileage}</td>\r\n                                            <td>{i.fuelCapacity}</td>\r\n                                            <td>{i.currentBid}</td>\r\n                                            <td>\r\n                                                <Button onClick = {(e) => this.addBid(i.id,index) } color = \"primary\"> Bid Amount</Button>\r\n                                            </td>\r\n                                            \r\n                                        </tr>\r\n                                        :\r\n                                        ''\r\n                                    )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                        \r\n                    </div>\r\n                    :\r\n                    ''\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Dashboard from './Dashboard';\r\nexport default class Products extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dashboard>\r\n                    Welcome\r\n                </Dashboard>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Register';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebaseConfig from './components/config';\nimport firebase from 'firebase/app'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Dashboard from './components/admin/Dashboard';\nimport BDashboard from './components/buyer/Dashboard';\nimport Products from './components/admin/Products'\n// firebase.initializeApp(firebaseConfig)\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/register\" component={Signup} />\n          <Route exact path = \"/dashboard\" component = {Dashboard}/>\n          <Route exact path = \"/home\" component = {Dashboard}/>\n          <Route exact path = \"/products\" component = {Products}/>\n          <Route exact path = \"/buy\" component = {BDashboard}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}